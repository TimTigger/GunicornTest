# 绑定的地址和端口号
bind = "0.0.0.0:9111"

# 使用的工作模式
"""1. 同步模式（默认）
特点：在同步模式下，每个工作进程只能处理一个请求。一个工作进程在处理请求期间不会处理其他任何请求。这种模式下的工作进程在等待网络IO（例如，读写请求）时会阻塞。
应用场景：适用于CPU密集型应用，以及那些不需要非常高并发处理能力的应用。如果每个请求都需要大量的CPU计算而相对较少的IO操作，同步工作模式可能是一个好选择。
2. 异步模式（基于gevent或eventlet）
特点：异步工作模式允许单个工作进程在等待IO操作时处理其他请求。这是通过将传统的阻塞IO操作转换为非阻塞IO并利用协程来实现的。这种模式可以大大提高单个进程的并发处理能力。
应用场景：非常适合IO密集型应用，例如，大量的网络请求、文件读写等。当你的应用需要处理大量的并发连接，且每个连接都有大量的等待/延迟时（如长轮询、WebSockets），异步模式是一个很好的选择。
3. gthread模式（基于线程）
特点：gthread工作模式使用线程池来处理请求，每个线程在处理一个请求。这种模式结合了同步和异步模式的一些特点，提供了比同步模式更好的IO等待处理能力，同时避免了异步编程的复杂性。
应用场景：适用于那些需要比同步模式更高并发处理能力，但又不想引入异步编程复杂性的应用。如果你的应用有不少阻塞IO操作，但你又想保持编程模型的简单性，gthread可能是一个合适的选择。
"""
worker_class = "sync"
# worker_class = "eventlet"

# 工作进程数
workers = 20

# 可选配置: 日志相关配置
accesslog = "-"  # 标准输出
errorlog = "-"  # 标准错误输出
loglevel = "info"

# 启动
# gunicorn -c gunicorn.conf.py --reload app:app